<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rpi, | Linux geek's scratchpad]]></title>
  <link href="http://3mdeb.com/blog/categories/rpi/atom.xml" rel="self"/>
  <link href="http://3mdeb.com/"/>
  <updated>2015-01-24T03:05:31+01:00</updated>
  <id>http://3mdeb.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi kernel repository aggregating patches for Linux mainline]]></title>
    <link href="http://3mdeb.com/blog/2014/10/15/raspberry-pi-kernel-repository-aggregating-patches-for-linux-mainline/"/>
    <updated>2014-10-15T23:23:11+02:00</updated>
    <id>http://3mdeb.com/blog/2014/10/15/raspberry-pi-kernel-repository-aggregating-patches-for-linux-mainline</id>
    <content type="html"><![CDATA[<p>Since several months I&rsquo;m trying to find my way to embedded Linux programming.
My hardware set was very limited I had only one board that can be called
&ldquo;embedded&rdquo; and it was Raspberry Pi. Because I am more interested in firmware/OS
level then hardware I tried to figure out what is going on with RPi kernel.
After taking brief review of
<a href="https://github.com/raspberrypi/linux">raspberrypi/linux</a> GitHub repository I
realized that close to my heart is upstreaming effort. So with noob attitude I
contacted RPi Upstreaming wiki page author (<a href="https://github.com/notro">notro</a>)
and we started to create some foundation.</p>

<p><em>Disclaimer: These are for testing purposes and considered unstable. Use at your own risk.</em>
<em>Edit: 20/10/2014:</em> minor typo, clone instructions moved to &ldquo;How to use it ?&rdquo; section</p>

<h2>What we have now ?</h2>

<p>We created set of repositories to handle upstreaming process.</p>

<p>First there is <a href="https://github.com/pietrushnic/rpi-dt-linux.git">rpi-dt-linux</a>
it is Linux kernel based on
<a href="https://git.kernel.org/cgit/linux/kernel/git/stable/linux-stable.git/">linux-stable</a>
with patches on top of every branch. This repository aims to aggregate all
patches required for Raspberry Pi support in upstream kernel. <code>rpi-dt-linux</code>
use <code>bcm2835_defconfig</code> with device tree support. We want to introduce every
driver that supports device tree. Right now a lot of stuff is missing, but I
will dive into it later.</p>

<p>After consulting with
<a href="https://github.com/raspberrypi/linux/issues/698">popcornmix</a> we decide to
rebase all patches to keep them on top of every branch. This of course mean
that repository will be broken, but patches will be more visible in history.</p>

<p>Second <a href="https://github.com/pietrushnic/rpi-dt-firmware">rpi-dt-firmware</a> is ready
to use firmware files for Raspberry Pi with already built modules and kernel.
If you are familiar with <a href="https://github.com/Hexxeh">Hexxeh</a>
<a href="https://github.com/Hexxeh/rpi-update">rpi-update</a> and his repository
<a href="https://github.com/Hexxeh/rpi-firmware">rpi-firmware</a> this should not be
anything new for you.</p>

<p>Third <a href="https://github.com/notro/rpi-bcm2835">rpi-bcm2835</a> which simplifies
build and release process of <code>rpi-dt-linux</code>.</p>

<h2>How to use it ?</h2>

<h2>User</h2>

<p>If you simply want to try new kernel on your RPi then install <code>rpi-update</code>, by:</p>

<p><code>
sudo apt-get install rpi-update
</code></p>

<p>on Raspbian or follow instruction from
<a href="https://github.com/Hexxeh/rpi-update">Readme.md</a> for other distributions.</p>

<p>To install latest release of <code>rpi-dt-firmware</code> use <code>rpi-update</code> on RPi:</p>

<p><code>
sudo REPO_URI=https://github.com/pietrushnic/rpi-dt-firmware rpi-update
</code></p>

<p>After update simply reboot your Pi and enjoy our upstream kernel :).</p>

<h2>Developer</h2>

<p>If you want to play with the code I have few hints that can help.</p>

<p>First please clone <code>rpi-dt-linux</code> and <code>rpi-bcm2835</code> mentioned above.</p>

<p><code>
git clone https://github.com/pietrushnic/rpi-dt-linux.git
git clone https://github.com/notro/rpi-bcm2835.git
</code></p>

<p>Then install <a href="https://github.com/notro/rpi-build">rpi-build</a> following
instructions on <a href="https://github.com/notro/rpi-build/wiki">wiki</a>. Then you can
do few things:</p>

<p>Build <code>rpi-dt-linux</code> locally. This will download latest snapshot of
<code>rpi-dt-linux</code> and other dependencies like <code>u-boot</code> and cross-compiler.</p>

<p><code>
cd path/to/rpi-bcm2835
rpi-build rpi-dt-linux clean build
</code></p>

<p>You can install already built kernel on your machine over ssh (replace
<code>&lt;RPI_IP&gt;</code> with your Pi IP address):</p>

<p><code>
rpi-build rpi-dt-linux install SSHIP=&lt;RPI_IP&gt;
</code></p>

<p>If you want to use your own kernel repository just use <code>rpi-bcm2835</code> with local
path:</p>

<p><code>
RPI_DT_LINUX_LOCAL=../../rpi-dt-linux rpi-build rpi-dt-linux clean build
</code></p>

<p>NOTE: that additional level of <code>../</code> was added because rpi-build creates
workdir which is reference directory for it.</p>

<p>It is also possible to release your own firmware repository. To help with
process there are two commands:</p>

<p><code>
FW_REPO=/home/pietrushnic/src/rpi-dt-firmware FW_BRANCH=master rpi-build rpi-dt-linux commit
FW_REPO=/home/pietrushnic/src/rpi-dt-firmware FW_BRANCH=master rpi-build rpi-dt-linux push
</code></p>

<p>Obviously <code>FW_REPO</code> is a directory with firmware git repository.</p>

<h2>Changelog</h2>

<p>At the point of writing this post there were 3 releases of <code>rpi-dt-firmware</code>. We
applied v10 of <a href="http://lwn.net/Articles/607424/">mailbox API</a> and Lubomir
Rintel <code>bcm2835-mbox</code>, <code>bcm2835-cpufreq</code> and <code>bcm2835-thermal</code> drivers from his
<a href="https://github.com/hackerspace/rpi-linux/commits/lr-raspberry-pi-new-mailbox">repository</a>.
All updates are published in
<a href="https://github.com/pietrushnic/rpi-dt-firmware/blob/master/README.md">README.md</a>
with every release.</p>

<h2>Summary</h2>

<p>Of course we are happy with every contribution small and big, critique and
process improvement hints. Let us know what you think about this effort.</p>
]]></content>
  </entry>
  
</feed>

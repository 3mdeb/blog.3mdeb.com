<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: virtualbox, | Linux geek's scratchpad]]></title>
  <link href="http://pietrushnic.github.io/blog/categories/virtualbox/atom.xml" rel="self"/>
  <link href="http://pietrushnic.github.io/"/>
  <updated>2015-06-13T14:47:19+02:00</updated>
  <id>http://pietrushnic.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[virtualbox-dkms: fix alloc_netdev problems when compiling with 3.17.0-rcX headers]]></title>
    <link href="http://pietrushnic.github.io/blog/2014/09/20/virtualbox-dkms-fix-alloc-netdev-problems-when-compiling-with-3-dot-17-dot-0-rcx-headers/"/>
    <updated>2014-09-20T22:55:00+02:00</updated>
    <id>http://pietrushnic.github.io/blog/2014/09/20/virtualbox-dkms-fix-alloc-netdev-problems-when-compiling-with-3-dot-17-dot-0-rcx-headers</id>
    <content type="html"><![CDATA[<h2>Intro</h2>

<p>Because of my bug hunting approach of using latest kernel I experienced problem
with compiling VirtualBox modules with <code>3.17.0-rc5</code> version on my Debian Jessie. Issue is well
known and described for examples <a href="https://bugs.launchpad.net/ubuntu/+source/virtualbox/+bug/1358157">here</a>.
Problem manifest itself with:</p>

<h2>```</h2>

<p>Deleting module version: 4.3.14</p>

<h2>completely from the DKMS tree.</h2>

<p>Done.
Loading new virtualbox-4.3.14 DKMS files&hellip;
Building only for 3.17.0-rc5+
Building initial module for 3.17.0-rc5+
Error! Bad return status for module build on kernel: 3.17.0-rc5+ (x86_64)
Consult /var/lib/dkms/virtualbox/4.3.14/build/make.log for more information.
Job for virtualbox.service failed. See &lsquo;systemctl status virtualbox.service&rsquo; and &lsquo;journalctl -xn&rsquo; for details.
invoke-rc.d: initscript virtualbox, action &ldquo;restart&rdquo; failed.
```</p>

<p>during <code>virtualbox-dkms</code> package installation or reconfiguration. In <code>make.log</code> you will find compilation error:</p>

<p>```
  CC [M]  /var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp/linux/VBoxNetAdp-linux.o
/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp/linux/VBoxNetAdp-linux.c: In function ‘vboxNetAdpOsCreate’:
/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp/linux/VBoxNetAdp-linux.c:186:48: error: macro &ldquo;alloc_netdev&rdquo; requires 4 arguments, but only 3 given</p>

<pre><code>                        vboxNetAdpNetDevInit);
                                            ^
</code></pre>

<p>/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp/linux/VBoxNetAdp-linux.c:184:15: error: ‘alloc_netdev’ undeclared (first use in this function)</p>

<pre><code> pNetDev = alloc_netdev(sizeof(VBOXNETADPPRIV),
           ^
</code></pre>

<p>/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp/linux/VBoxNetAdp-linux.c:184:15: note: each undeclared identifier is reported only once for each function it appears in
/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp/linux/VBoxNetAdp-linux.c: At top level:
/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp/linux/VBoxNetAdp-linux.c:159:13: warning: ‘vboxNetAdpNetDevInit’ defined but not used [-Wunused-function]
 static void vboxNetAdpNetDevInit(struct net_device *pNetDev)</p>

<pre><code>         ^
</code></pre>

<p>scripts/Makefile.build:257: recipe for target &lsquo;/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp/linux/VBoxNetAdp-linux.o&rsquo; failed
make[2]: <strong><em> [/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp/linux/VBoxNetAdp-linux.o] Error 1
scripts/Makefile.build:404: recipe for target &lsquo;/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp&rsquo; failed
make[1]: </em></strong> [/var/lib/dkms/virtualbox/4.3.14/build/vboxnetadp] Error 2
Makefile:1373: recipe for target &lsquo;<em>module</em>/var/lib/dkms/virtualbox/4.3.14/build&rsquo; failed
make: *** [<em>module</em>/var/lib/dkms/virtualbox/4.3.14/build] Error 2
make: Leaving directory &lsquo;/usr/src/linux-headers-3.17.0-rc5+&rsquo;
```</p>

<p>For sure we have to wait for some time before new version of kernel and
VirtualBox will catch up each other in Debian.</p>

<h2>Fix source code of Debian package</h2>

<p>Let&rsquo;s get get virtualbox package source, fix issues rebuild package and install
in the system. Patch to apply can be found <a href="https://forums.virtualbox.org/viewtopic.php?p=296650#p296650">here</a>.</p>

<p><code>
apt-get source virtualbox-dkms
cd virtualbox-4.3.14-dfsg
</code></p>

<p>Now we can patch the sources with:</p>

<p>```diff
diff &mdash;git a/src/VBox/HostDrivers/VBoxNetAdp/linux/VBoxNetAdp-linux.c b/src/VBox/HostDrivers/VBoxNetAdp/linux/VBoxNetAdp-linux.c
index c6b21a9cc199..9ccce6f32218 100644
&mdash;&ndash; a/src/VBox/HostDrivers/VBoxNetAdp/linux/VBoxNetAdp-linux.c
+++ b/src/VBox/HostDrivers/VBoxNetAdp/linux/VBoxNetAdp-linux.c
@@ -52,6 +52,25 @@</p>

<p> #define VBOXNETADP_FROM_IFACE(iface) ((PVBOXNETADP) ifnet_softc(iface))</p>

<p>+/<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>
+source for the 4th parameter alloc_netdev fix for kernel 3.17-rc1 is:
+<a href="https://github.com/proski/madwifi/commit/c5246021b7b8580c2aeb0a145903acc07d246ac1">https://github.com/proski/madwifi/commit/c5246021b7b8580c2aeb0a145903acc07d246ac1</a>
+</em>/
+#ifndef NET_NAME_UNKNOWN
+#undef alloc_netdev
+#if LINUX_VERSION_CODE &lt; KERNEL_VERSION(2,6,23)
+#define alloc_netdev(sizeof_priv, name, name_assign_type, setup) \
+  alloc_netdev(sizeof_priv, name, setup)
+#elif LINUX_VERSION_CODE &lt; KERNEL_VERSION(2,6,38)
+#define alloc_netdev(sizeof_priv, name, name_assign_type, setup) \
+  alloc_netdev_mq(sizeof_priv, name, setup, 1)
+#else
+#define alloc_netdev(sizeof_priv, name, name_assign_type, setup) \
+  alloc_netdev_mqs(sizeof_priv, name, setup, 1, 1)
+#endif
+#endif
+/</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><em>/
+
 /</em><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>
 *   Internal Functions                                                         *
 </strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>*/
@@ -183,6 +202,7 @@ int vboxNetAdpOsCreate(PVBOXNETADP pThis, PCRTMAC pMACAddress)</p>

<pre><code> /* No need for private data. */
 pNetDev = alloc_netdev(sizeof(VBOXNETADPPRIV),
                        pThis-&gt;szName[0] ? pThis-&gt;szName : VBOXNETADP_LINUX_NAME,
</code></pre>

<ul>
<li><pre><code>                    NET_NAME_UNKNOWN,
                    vboxNetAdpNetDevInit);
</code></pre>

<p> if (pNetDev)
 {
diff &mdash;git a/src/VBox/Runtime/r0drv/linux/alloc-r0drv-linux.c b/src/VBox/Runtime/r0drv/linux/alloc-r0drv-linux.c
index 21e124bda039..2a046a3b254a 100644
&mdash;&ndash; a/src/VBox/Runtime/r0drv/linux/alloc-r0drv-linux.c
+++ b/src/VBox/Runtime/r0drv/linux/alloc-r0drv-linux.c
@@ -191,7 +191,7 @@ static PRTMEMHDR rtR0MemAllocExecVmArea(size_t cb)
     struct page **papPagesIterator = papPages;
     pVmArea->nr_pages = cPages;
     pVmArea->pages    = papPages;</p></li>
<li><pre><code> if (!map_vm_area(pVmArea, PAGE_KERNEL_EXEC, &amp;papPagesIterator))
</code></pre></li>
<li><pre><code> if (!map_vm_area(pVmArea, PAGE_KERNEL_EXEC, papPagesIterator))
 {
     PRTMEMLNXHDREX pHdrEx = (PRTMEMLNXHDREX)pVmArea-&gt;addr;
     pHdrEx-&gt;pVmArea     = pVmArea;
</code></pre>

<p>```</p></li>
</ul>


<p>Assuming you save above code in <code>my_patch</code> file and you are in <code>virtualbox</code>
dpkg source directory:</p>

<p><code>sh
patch -p1 &lt; my_patch
</code></p>

<p>Install packages required to build:</p>

<p><code>
sudo apt-get build-dep virtualbox
</code></p>

<p>And build with:</p>

<p><code>sh
dpkg-buildpackage -uc -b
</code></p>

<p>In result we should get all <code>virtualbox</code> packages. We need only <code>dkms</code>:</p>

<p>```
sudo dpkg -i ../virtualbox-dkms_4.3.14-dfsg-1_all.deb</p>

<p>(Reading database &hellip; 432638 files and directories currently installed.)
Preparing to unpack &hellip;/virtualbox-dkms_4.3.14-dfsg-1_all.deb &hellip;</p>

<hr />

<p>Deleting module version: 4.3.14</p>

<h2>completely from the DKMS tree.</h2>

<p>Done.
Unpacking virtualbox-dkms (4.3.14-dfsg-1) over (4.3.14-dfsg-1) &hellip;
Setting up virtualbox-dkms (4.3.14-dfsg-1) &hellip;
Loading new virtualbox-4.3.14 DKMS files&hellip;
Building only for 3.17.0-rc5+
Building initial module for 3.17.0-rc5+
Done.</p>

<p>vboxdrv:
Running module version sanity check.
 &ndash; Original module
   &ndash; No original module exists within this kernel
 &ndash; Installation
   &ndash; Installing to /lib/modules/3.17.0-rc5+/updates/dkms/</p>

<p>vboxnetadp.ko:
Running module version sanity check.
 &ndash; Original module
   &ndash; No original module exists within this kernel
 &ndash; Installation
   &ndash; Installing to /lib/modules/3.17.0-rc5+/updates/dkms/</p>

<p>vboxnetflt.ko:
Running module version sanity check.
 &ndash; Original module
   &ndash; No original module exists within this kernel
 &ndash; Installation
   &ndash; Installing to /lib/modules/3.17.0-rc5+/updates/dkms/</p>

<p>vboxpci.ko:
Running module version sanity check.
 &ndash; Original module
   &ndash; No original module exists within this kernel
 &ndash; Installation
   &ndash; Installing to /lib/modules/3.17.0-rc5+/updates/dkms/</p>

<p>sed: -e expression #1, char 6: unknown command: `m'
depmod&hellip;.</p>

<p>DKMS: install completed.`
```</p>

<p>And we can happily use VirtualBox with <code>3.17.0-rc5</code> kernel.</p>
]]></content>
  </entry>
  
</feed>
